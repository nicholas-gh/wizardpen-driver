WizardPen tablet driver for XOrg/XFree86
========================================

Introduction
------------

This is a driver for the Genius WizardPen series tablets for XOrg/XFree86 4.x.


News
----

Changes since 0.4.1:

* Border* and ClickPressureLevel options are now deprecated (though
  accepted still) and will be removed in next releases. Please use
  (Top|Bottom)[XYZ] options instead.

* Mouse on MousePen tablets is now supported, though acceleration settings
  in X do not apply.

* The WP5540U define was removed from, and the driver was fixed to
  work without it.


Installation
------------

See the INSTALL file for detailed installation instructions.


Compatibility
-------------

This driver should work with all Genius WizardPen and MousePen series
tablets. Other Genius USB tablets may be working too, please report any
experience with it, if you have one.

Support status for EasyPen tablets and Genius serial tablets, in general,
is unknown.

In fact, support for serial tablets was inherited entirely from Acecad
tablet driver and authors didn't have any devices to test it with, so it
is unknown if serial tablets still work with recent versions. Please
report your experience with it, if you have one.


USB tablet specifics
--------------------

Most probably, you will need to setup an udev rule for your tablet to
automaticaly create a symlink to its /dev/input/eventX device. An
exception to this is when you have only one input device, the tablet,
in that case you could safely use its /dev/input/event0.

Custom udev rules are usually placed in
/etc/udev/rules.d/10-local.udev.rules.

An udev rule like this:

BUS="usb", KERNEL="event*", SYSFS{product}="Tablet WP8060U", NAME="input/%k", SYMLINK="tablet-event"

will create a /dev/tablet-event symlink pointing to the corresponding
/dev/input/eventX, for the Genius MousePen 8x6 tablet, whenever it's plugged
in or system boots.

The 2.6 kernels translate input from all mouse devices into /dev/input/mice
and /dev/psaux devices. Somehow, pen touches and buttons from Genius
tablets get translated too, but incorrectly. For example, pen touch becomes
middle button click. Input from mouse on MousePen tablets translates
correctly. As a side effect you could not use general mouse input devices
which use /dev/input/mice or /dev/psaux along with the tablet in your
X server configuration. You will need to create udev rules for EACH other
input device and make separate "InputDevice" sections for them.

For example, if you have a PS/2 mouse, you may create a rule like this (I'm
not sure if this is correct one, but it works for me):

KERNEL="mouse*", SUBSYSTEM="input" SYSFS{dev}="13:33", NAME="input/%k", SYMLINK="ps-mouse"

And use following "InputDevice" section in your X server configuration:

Section "InputDevice"
	Identifier	"ps-mouse"
	Driver		"mouse"
	Option		"CorePointer"
	Option		"Device"		"/dev/ps-mouse"
	Option		"Protocol"		"ImPS/2"
	Option		"ZAxisMapping"		"4 5"
EndSection

For a thourough guide on writing udev rules you could see "Writing udev
rules" by Daniel Drake (http://www.reactivated.net/writing_udev_rules.html)


Parameters
----------

Serial and USB tablets have different set of parameters (former have less).


USB tablet parameters
---------------------

	Option "Device"
		
		The tablet's event device or a symlink created by udev
		rule.
		Example: /dev/tablet-event
		Default: none


	Option "Mode"

		The way the driver should report pen movement (mouse
		movement always reported as relative). Must be "Relative"
		or "Absolute". Could be changed at runtime using xinput
		utility. Main effect of using this option is in pen being
		able to move "out" of the screen, therefore enabling, for
		example, dragging windows across workspaces in window
		manager.
		Example:
			...
			Option	"Mode"	"Relative"
			...
		Default:
			...
			Option	"Mode"	"Absolute"
			...


It is not possible to retrieve correct working area size and position from
Genius USB tablets. As a workaround following options were introduced:

	Option "MaxX", Option "MaxY"

		These two options are used to set tablet's maximum
		coordinates' values.
		Example:
			...
			Option	"MaxX"	"32767"
			Option	"MaxY"	"32767"
			...
		Default: values obtained from hardware (wrong on at least
		MousePen 8x6)


	Option "MaxZ"

		Tablets always report correct maximal pressure value, and
		there seems to be no point in using this option. For the
		purpose of shortening pressure range use TopZ/BottomZ
		options.
		Example:
			...
			Option	"MaxZ"	"1024"
			...
		Default: value obtained from hardware
			 (always correct actual range)


	Option "TopX", Option "TopY"

		Coordinates of the working area's top-left corner. Values
		must be in range of [ 0, BottomX ] for TopX and
		[ 0, BottomY ] for TopY.
		Example:
			...
			Option	"TopX"	"0"
			Option	"TopY"	"2517"
			...
		Default:
			...
			Option	"TopX"	"0"
			Option	"TopY"	"0"
			...


	Option "TopZ"

		Minimal pressure recognized by the driver. The driver will
		report no pressure nor left button click unless the pen is
		pressed harder than value of TopZ. Value must be in range
		of [ 0, BottomZ ].
		Example:
			...
			Option	"TopZ"	"128"
			...
		Default:
			...
			Option	"TopZ"	"0"
			...


	Option "BottomX", Option "BottomY"

		Coordinates of the working-area's bottom-right corner. Values
		must be in range of [ TopX, MaxX ] for BottomX and [ TopY,
		MaxY ] for BottomY.

		Example:
			...
			Option	"BottomX"	"31859"
			Option	"BottomY"	"32762"
			...
		Default: equal to MaxX/MaxY


	Option "BottomZ"

		Maximum pressure recognized by the driver.
		This option may be used to shorten the pressure range
		recognized by the driver. It may be useful when
		somebody wishes to apply less physical effort when
		using the tablet. Though this comes for a price of
		lower pressure precision. Value must be in range of [ TopZ,
		MaxZ ].
		Example:
			...
			Option	"TopZ"	"768"
			...
		Default: equal to MaxZ

	
This picture illustrates how (Top|Bottom|Max)[XY] options relate to the tablet
working area:

	O--------------------------------+
	|0,0   ENTIRE SENSITIVE AREA     |
	|   O------------------------+   |
	|   |TopX,                   |   |
	|   |TopY                    |   |
	|   |                        |   |
	|   |         WORKING        |   |
	|   |                        |   |
	|   |          AREA          |   |
	|   |                        |   |
	|   |                BottomX,|   |
	|   |                BottomY |   |
	|   +------------------------O   |
	|                       MaxX,MaxY|
	+--____                    ____--O
	       ~~~~~~~~~~~~~~~~~~~~

To assist in choosing correct (Top|Bottom|Max)[XY] option values,
wizardpen-calibrate tool has been created. You could find it in the
"calibrate" directory of the source archive.

This picture illustrates how (Top|Bottom|Max)Z options participate in the pen
pressure translation:

	WHAT THE DRIVER SEES:

	no                     maximum
	pressure              pressure

	+----------------------------+	<- pressure  range  retreived
	0                         MaxZ	   from hardware or overriden
	                              	   by user using  MaxZ option

	.....+-----------------+......	<- recognized  range  set  by
	     TopZ        BottomZ	   user   using  TopZ/BottomZ
	                              	   options
	
	WHAT THE X-SERVER SEES:

	no          maximum
	pressure   pressure

	+-----------------+		<- pressure   range  reported
	0      BottomZ-TopZ		   by   the   driver  to  the
					   X server


Serial tablet parameters
------------------------

As the authors had no serial tablets to test the driver with, this
description is only a guess, sorry.

	Option "Device"
		
		Serial device to which the tablet is connected.
		Example: /dev/ttyS0
		Default: none


	Option "Model"

		Tablet model name: "Flair" or "A-Series".
		Example: A-Series
		Default: Flair
	

	Option "ReportSpeed"
		
		The speed at which the tablet should report its state(?).
		Must be one of 120, 85, 10, or 2.
		Example: 120
		Default: 85


	Option "Increment"

		This option should control tablet resolution(?).
		Must be in range of 1-95. Set to 0 to automatically choose
		the best value.
		Example: 33
		Default: 0


Troubleshooting
---------------

FIXME: Not much here yet.

Please use the WizardPen driver forum located at
http://www.stud.fit.vutbr.cz/~xhorak28/unb/forum/

Please include in your post:

1. Tablet model name
2. Driver, linux distribution and kernel versions
3. Your XF86Config/xorg.conf file (as attachment)
4. Your XFree86.log/Xorg.log

If you think everything except the driver is working correctly, then
please:

1. Recompile and install the driver with debug_level variable in the
   wizardpen.c set to 10
2. Start/restart the X server
3. Make some strokes on the tablet
4. Stop the X server, and attach resulting XFree86.log/Xorg.log file
   instead.

It is also will be helpful if you run
'cat <your-tablet-device> > tablet-dump.bin',
make some strokes, terminate cat, and attach resulting file to the
post too.

Instead of posting to the forum you could always contact authors via
e-mail. But remember: by posting to the forum you help the community :).


License
-------

The driver is licensed under GNU GPL. Please see COPYING file for license
text.


Authors and contacts
--------------------

Authors:	Jan Horak <xhorak28@stud.fit.vutbr.cz>,
		Nickolay Kondrashov <knu@avtomatikarus.com>

Homepage:	http://eva.fit.vutbr.cz/~xhorak28/?page=WizardPen

Forum:		http://www.stud.fit.vutbr.cz/~xhorak28/unb/forum/

WizardPen tablet driver is based on the Acecad tablet driver written
by Edouard Tisserant, Shane Watts, Carlo Vittoli
(http://acecad.sourceforge.net/) and Stéphane Voltz
(http://perso.wanadoo.fr/septieme/acecad/index.html).


